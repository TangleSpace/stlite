{"version":3,"sources":["../../../streamlit/frontend/src/components/widgets/DownloadButton/DownloadButton.tsx"],"names":["DownloadButton","props","disabled","element","widgetMgr","style","width","className","Button","help","kind","Kind","PRIMARY","size","Size","SMALL","onClick","setTriggerValue","fromUi","link","document","createElement","uri","buildMediaUri","url","encodeURIComponent","title","setAttribute","click","label"],"mappings":";4LAmEeA,MAjCf,SAAwBC,GAA6B,IAC3CC,EAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,QAASC,EAAqBH,EAArBG,UACrBC,EAAQ,CAAEC,MADgCL,EAAVK,OAgBtC,OACE,qBAAKC,UAAU,8BAA8BF,MAAOA,EAApD,SACE,cAACG,EAAA,EAAD,CAAeC,KAAMN,EAAQM,KAA7B,SACE,cAAC,IAAD,CACEC,KAAMC,IAAKC,QACXC,KAAMC,IAAKC,MACXb,SAAUA,EACVc,QApBgC,WAGtCZ,EAAUa,gBAAgBd,EAAS,CAAEe,QAAQ,IAC7C,IAAMC,EAAOC,SAASC,cAAc,KAC9BC,EAAG,UAAMC,YAAcpB,EAAQqB,KAA5B,kBAA0CC,mBACjDL,SAASM,QAEXP,EAAKQ,aAAa,OAAQL,GAC1BH,EAAKQ,aAAa,SAAU,UAC5BR,EAAKS,SAMD,SAMGzB,EAAQ0B","file":"static/js/40.bca1b9a1.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { DownloadButton as DownloadButtonProto } from \"src/autogen/proto\"\nimport UIButton, {\n  ButtonTooltip,\n  Kind,\n  Size,\n} from \"src/components/shared/Button\"\nimport { WidgetStateManager } from \"src/lib/WidgetStateManager\"\nimport { buildMediaUri } from \"src/lib/UriUtil\"\n\nexport interface Props {\n  disabled: boolean\n  element: DownloadButtonProto\n  widgetMgr: WidgetStateManager\n  width: number\n}\n\nfunction DownloadButton(props: Props): ReactElement {\n  const { disabled, element, widgetMgr, width } = props\n  const style = { width }\n\n  const handleDownloadClick: () => void = () => {\n    // Downloads are only done on links, so create a hidden one and click it\n    // for the user.\n    widgetMgr.setTriggerValue(element, { fromUi: true })\n    const link = document.createElement(\"a\")\n    const uri = `${buildMediaUri(element.url)}?title=${encodeURIComponent(\n      document.title\n    )}`\n    link.setAttribute(\"href\", uri)\n    link.setAttribute(\"target\", \"_blank\")\n    link.click()\n  }\n\n  return (\n    <div className=\"row-widget stDownloadButton\" style={style}>\n      <ButtonTooltip help={element.help}>\n        <UIButton\n          kind={Kind.PRIMARY}\n          size={Size.SMALL}\n          disabled={disabled}\n          onClick={handleDownloadClick}\n        >\n          {element.label}\n        </UIButton>\n      </ButtonTooltip>\n    </div>\n  )\n}\n\nexport default DownloadButton\n"],"sourceRoot":""}